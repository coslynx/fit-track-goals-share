// api/server.js
import express from 'express';
import cors from 'cors';
import dotenv from 'dotenv';
import { connectDB } from '../config/db.js';
import authRoutes from './routes/authRoutes.js';
import goalRoutes from './routes/goalRoutes.js';
import trackingRoutes from './routes/trackingRoutes.js';
import socialRoutes from './routes/socialRoutes.js';
import errorMiddleware from './middleware/errorMiddleware.js';

// Load environment variables from .env file
dotenv.config();

const app = express();

// Enable CORS
app.use(cors());

// Parse JSON request bodies
app.use(express.json());

// Connect to MongoDB
try {
    await connectDB();
    console.log('MongoDB connected successfully.');
} catch (error) {
    console.error('MongoDB connection error:', error);
    process.exit(1); // Exit process if database connection fails
}


// Mount routes
app.use('/api/auth', authRoutes);
app.use('/api/goals', goalRoutes);
app.use('/api/activities', trackingRoutes);
app.use('/api/posts', socialRoutes);

// Error handling middleware
app.use(errorMiddleware);

const PORT = process.env.PORT || 5000;

const server = app.listen(PORT, () => {
    console.log(Server is running on port ${PORT});
});

server.on('error', (error) => {
    console.error('Server startup error:', error);
});