// api/server.js
const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const dotenv = require('dotenv');
const { errorMiddleware } = require('./middleware/errorMiddleware');

dotenv.config();

const app = express();
const PORT = process.env.PORT || 5000;
const MONGODB_URI = process.env.MONGODB_URI;

//Import routes
const authRoutes = require('./routes/authRoutes');
const goalRoutes = require('./routes/goalRoutes');
const trackingRoutes = require('./routes/trackingRoutes');
const socialRoutes = require('./routes/socialRoutes');

app.use(cors({ origin: '*' }));
app.use(express.json());

//Logging middleware
app.use((req, res, next) => {
    console.log(Incoming ${req.method} request to: ${req.url});
    next();
});

app.use('/api/auth', authRoutes);
app.use('/api/goals', goalRoutes);
app.use('/api/tracking', trackingRoutes);
app.use('/api/social', socialRoutes);


app.use(errorMiddleware);


app.use((err, req, res, next) => {
    console.error('Global error handler:', err);
    res.status(err.statusCode || 500).json({
        message: err.message || 'An unexpected error occurred.',
    });
});


// Server startup script
const startServer = async () => {
    try {
      await mongoose.connect(MONGODB_URI);
        console.log('MongoDB connected');
      app.listen(PORT, () => {
        console.log(Server running on port ${PORT});
    });
} catch (error) {
        console.error('Server startup error:', error);
    }
};

startServer();