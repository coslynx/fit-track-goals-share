const express = require('express');
const cors = require('cors');
const dotenv = require('dotenv');
const db = require('./config/db');
const authRoutes = require('./routes/authRoutes');
const goalRoutes = require('./routes/goalRoutes');
const trackingRoutes = require('./routes/trackingRoutes');
const socialRoutes = require('./routes/socialRoutes');
const errorMiddleware = require('./middleware/errorMiddleware');

dotenv.config();

async function main() {
    const app = express();

    app.use(cors());
    app.use(express.json());


    try {
        await db();
        console.log("MongoDB connection established");
        
    } catch (error) {
        console.error("MongoDB connection error:", error);
       process.exit(1);
       
    }
    

    app.use('/api/auth', authRoutes);
    app.use('/api/goals', goalRoutes);
    app.use('/api/tracking', trackingRoutes);
    app.use('/api/social', socialRoutes);


    app.use(errorMiddleware);
    

    const port = process.env.PORT || 5000;
    const server = app.listen(port, () => {
        console.log(Server running on port ${port});
    });
    

     server.on('error', (error) => {
        console.error("Server startup error:", error);
         process.exit(1);
    });
    

    if(!server.listening){
        console.error("Server startup error: Server not listening");
        process.exit(1);
    }
}


main();