const express = require('express');
const jwt = require('jsonwebtoken');
const { sanitize } = require('src/utils/helpers');
const Post = require('../models/Post');
const {verifyToken} = require('../middleware/authMiddleware');

const router = express.Router();

// POST /api/posts
router.post('/', verifyToken, async (req, res) => {
    try {
        const { content } = req.body;
        if (!content) {
             return res.status(400).json({
                status: 400,
                error: 'Post content is required'
            });
        }

         const sanitizedContent = sanitize(content)

        const userId = req.user.id;


        const newPost = new Post({
            userId,
            content: sanitizedContent,
        });

        await newPost.save();
        res.status(201).json(newPost);
    } catch (error) {
        console.error('Error creating post:', error);
        res.status(500).json({
            status: 500,
            error: 'Unexpected server error while creating a post'
        });
    }
});

// GET /api/posts
router.get('/', async (req, res) => {
    try {
        const page = parseInt(req.query.page) || 1;
        const limit = 20;
        const skip = (page - 1) * limit;


        const posts = await Post.find()
            .sort({createdAt: -1})
             .skip(skip)
            .limit(limit);


        res.status(200).json(posts);
    } catch (error) {
        console.error('Error getting posts:', error);
        res.status(500).json({
             status: 500,
            error: 'Unexpected server error while fetching posts'
        });
    }
});

module.exports = router;