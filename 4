const jwt = require('jsonwebtoken');
const { jwtSecret } = require('../../config/auth');

const authMiddleware = (req, res, next) => {
  try {
    const authHeader = req.headers.authorization;

    if (!authHeader || !authHeader.startsWith('Bearer ')) {
      return res.status(401).json({ message: 'Unauthorized' });
    }

    const token = authHeader.substring(7);


    jwt.verify(token, jwtSecret, (err, decoded) => {
      if (err) {
        if (err.name === 'TokenExpiredError') {
           return res.status(401).json({ message: 'Unauthorized' });
        } else if (err.name === 'JsonWebTokenError') {
           return res.status(401).json({ message: 'Unauthorized' });
        }
          return res.status(500).json({ message: 'Internal Server Error' });
      }

      req.user = decoded;
      next();
    });
  } catch (error) {
    console.error('Error during token verification:', error);
    return res.status(500).json({ message: 'Internal Server Error' });
  }
};

module.exports = authMiddleware;