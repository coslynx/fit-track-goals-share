import axios, { AxiosInstance, AxiosRequestConfig, AxiosError } from 'axios';
import * as dotenv from 'dotenv';

dotenv.config();

const apiBaseUrl = process.env.VITE_API_BASE_URL;

const axiosInstance: AxiosInstance = axios.create({
  baseURL: apiBaseUrl,
});

axiosInstance.interceptors.request.use(
  (config: AxiosRequestConfig) => {
    const token = localStorage.getItem('token');
    if (token) {
      config.headers = {
        ...config.headers,
        Authorization: Bearer ${token},
      };
    }
    return config;
  },
  (error: AxiosError) => {
    return Promise.reject(error);
  }
);

axiosInstance.interceptors.response.use(
  (response) => {
    return response;
  },
  (error: AxiosError) => {
      if (error.response && error.response.status === 401) {
        window.location.href = '/auth';
      }
      console.error('API Error:', error);
      return Promise.reject(error);
  }
);


export default axiosInstance;